diff --git a/common/inc/nv-linux.h b/common/inc/nv-linux.h
index 85041c2..8d30833 100644
--- a/common/inc/nv-linux.h
+++ b/common/inc/nv-linux.h
@@ -231,6 +231,7 @@ NV_STATUS nvos_forward_error_to_cray(struct pci_dev *, NvU32,
 #endif
 
 #if defined(NV_ASM_SET_MEMORY_H_PRESENT)
+#include <asm/pgtable_types.h>
 #include <asm/set_memory.h>
 #endif
 
diff --git a/conftest.sh b/conftest.sh
index cc25806..7d040ab 100755
--- a/conftest.sh
+++ b/conftest.sh
@@ -130,6 +130,7 @@ test_headers() {
 
     # Arch specific headers which need testing
     FILES_ARCH="asm/book3s/64/hash-64k.h"
+    FILES_ARCH="$FILES_ARCH asm/pgtable_types.h"
     FILES_ARCH="$FILES_ARCH asm/set_memory.h"
     FILES_ARCH="$FILES_ARCH asm/powernv.h"
     FILES_ARCH="$FILES_ARCH asm/tlbflush.h"
@@ -398,6 +399,7 @@ compile_test() {
             #
             CODE="
             #if defined(NV_ASM_SET_MEMORY_H_PRESENT)
+            #include <asm/pgtable_types.h>
             #include <asm/set_memory.h>
             #else
             #include <asm/cacheflush.h>
@@ -415,6 +417,7 @@ compile_test() {
             #
             CODE="
             #if defined(NV_ASM_SET_MEMORY_H_PRESENT)
+            #include <asm/pgtable_types.h>
             #include <asm/set_memory.h>
             #else
             #include <asm/cacheflush.h>
@@ -426,6 +429,22 @@ compile_test() {
             compile_check_conftest "$CODE" "NV_SET_MEMORY_ARRAY_UC_PRESENT" "" "functions"
         ;;
 
+	set_pages_array_uc)
+            #
+            # Determine if the set_pages_array_uc() function is present.
+            #
+            CODE="
+            #if defined(NV_ASM_SET_MEMORY_H_PRESENT)
+            #include <asm/pgtable_types.h>
+            #include <asm/set_memory.h>
+            #endif
+            void conftest_set_pages_array_uc(void) {
+                set_pages_array_uc();
+            }"
+
+            compile_check_conftest "$CODE" "NV_SET_PAGES_ARRAY_UC_PRESENT" "" "functions"
+	;;
+
         sysfs_slab_unlink)
             #
             # Determine if the sysfs_slab_unlink() function is present.
@@ -467,6 +486,7 @@ compile_test() {
             #
             CODE="
             #if defined(NV_ASM_SET_MEMORY_H_PRESENT)
+            #include <asm/pgtable_types.h>
             #include <asm/set_memory.h>
             #else
             #include <asm/cacheflush.h>
diff --git a/nvidia/nv-vm.c b/nvidia/nv-vm.c
index e407714..e1f3095 100644
--- a/nvidia/nv-vm.c
+++ b/nvidia/nv-vm.c
@@ -62,7 +62,7 @@ static inline int nv_set_memory_array_type_present(NvU32 type)
 {
     switch (type)
     {
-#if defined(NV_SET_MEMORY_ARRAY_UC_PRESENT)
+#if defined(NV_SET_PAGES_ARRAY_UC_PRESENT) || defined(NV_SET_MEMORY_ARRAY_UC_PRESENT)
         case NV_MEMORY_UNCACHED:
             return 1;
         case NV_MEMORY_WRITEBACK:
@@ -74,14 +74,25 @@ static inline int nv_set_memory_array_type_present(NvU32 type)
 }
 
 static inline void nv_set_memory_array_type(
+#if defined(NV_SET_PAGES_ARRAY_UC_PRESENT)
+    struct page** pages,
+#else
     unsigned long *pages,
+#endif
     NvU32 num_pages,
     NvU32 type
 )
 {
     switch (type)
     {
-#if defined(NV_SET_MEMORY_ARRAY_UC_PRESENT)
+#if defined(NV_SET_PAGES_ARRAY_UC_PRESENT)
+        case NV_MEMORY_UNCACHED:
+            set_pages_array_uc(pages, num_pages);
+            break;
+        case NV_MEMORY_WRITEBACK:
+            set_pages_array_wb(pages, num_pages);
+            break;
+#elif defined(NV_SET_MEMORY_ARRAY_UC_PRESENT)
         case NV_MEMORY_UNCACHED:
             set_memory_array_uc(pages, num_pages);
             break;
@@ -125,7 +136,11 @@ static inline void nv_set_memory_type(nv_alloc_t *at, NvU32 type)
 {
     NvU32 i;
     NV_STATUS status;
+#if defined(NV_SET_PAGES_ARRAY_UC_PRESENT)
+    struct page** pages;
+#else
     unsigned long *pages;
+#endif
     nvidia_pte_t *page_ptr;
     struct page *page;
 
@@ -136,7 +151,7 @@ static inline void nv_set_memory_type(nv_alloc_t *at, NvU32 type)
         if (nv_set_memory_array_type_present(type))
         {
             status = os_alloc_mem((void **)&pages,
-                        at->num_pages * sizeof(unsigned long));
+                        at->num_pages * sizeof(*pages));
             if (status != NV_OK)
                 pages = NULL;
         }
@@ -147,7 +162,11 @@ static inline void nv_set_memory_type(nv_alloc_t *at, NvU32 type)
             {
                 page_ptr = at->page_table[i];
                 page = NV_GET_PAGE_STRUCT(page_ptr->phys_addr);
+#if defined(NV_SET_PAGES_ARRAY_UC_PRESENT)
+                pages[i] = page;
+#else
                 pages[i] = (unsigned long)page_address(page);
+#endif
             }
             nv_set_memory_array_type(pages, at->num_pages, type);
             os_free_mem(pages);
diff --git a/nvidia/nvidia.Kbuild b/nvidia/nvidia.Kbuild
index 8ae1016..104d4fd 100644
--- a/nvidia/nvidia.Kbuild
+++ b/nvidia/nvidia.Kbuild
@@ -105,6 +105,7 @@ NV_CONFTEST_FUNCTION_COMPILE_TESTS += set_pages_uc
 NV_CONFTEST_FUNCTION_COMPILE_TESTS += list_is_first
 NV_CONFTEST_FUNCTION_COMPILE_TESTS += set_memory_uc
 NV_CONFTEST_FUNCTION_COMPILE_TESTS += set_memory_array_uc
+NV_CONFTEST_FUNCTION_COMPILE_TESTS += set_pages_array_uc
 NV_CONFTEST_FUNCTION_COMPILE_TESTS += change_page_attr
 NV_CONFTEST_FUNCTION_COMPILE_TESTS += pci_get_class
 NV_CONFTEST_FUNCTION_COMPILE_TESTS += pci_choose_state
